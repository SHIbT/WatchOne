apply plugin: 'com.android.application'

android {
    compileSdkVersion 27

    def versionPropsFile = rootProject.file('version.properties')
    def build
    def name
    def code
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')

    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))
        build = versionProps['Mobile_VERSION_BUILD'].toString()
        name = versionProps['Mobile_VERSION_NAME'].toString()
        code = versionProps['Mobile_VERSION_CODE'].toInteger()
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }
/*Wrapping inside a method avoids auto incrementing on every gradle task run. Now it runs only when we build apk*/
    ext.autoIncrementBuildNumber = {

        if (versionPropsFile.canRead()) {
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            build = formattedDate
            code = versionProps['Mobile_VERSION_CODE'].toInteger() + 1
            versionProps['Mobile_VERSION_BUILD'] = build.toString()
            versionProps['Mobile_VERSION_CODE'] = code.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            throw new FileNotFoundException("Could not read version.properties!")
        }
    }

    defaultConfig {
        applicationId "uk.co.shibt.watchone"
        minSdkVersion 24
        targetSdkVersion 27
        versionName name + "." + build
        versionCode code
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "SHIbT-WatchOne-${versionName}.apk"
                }
            }
        }
        // Hook to check if the release/debug task is among the tasks to be executed.
        //Let's make use of it
        gradle.taskGraph.whenReady { taskGraph ->
            if (taskGraph.hasTask(assembleDebug)) {  /* when run debug task */
                autoIncrementBuildNumber()
            } else if (taskGraph.hasTask(assembleRelease)) { /* when run release task */
                autoIncrementBuildNumber()
            }

        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.android.support:design:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    wearApp project(':wear')
    implementation 'com.google.android.gms:play-services-wearable:15.0.1'
}
